stages:
  - build
  - release

.dagger:
  image: docker:latest
  variables:
    DAGGER_VERSION: 0.2.8
    DAGGER_LOG_FORMAT: plain
    DAGGER_CACHE_PATH: .dagger-cache
  services:
    - docker:dind
  cache:
    key: dagger-${CI_JOB_NAME}
    paths:
      - ${DAGGER_CACHE_PATH}
  before_script:
    - apk add --no-cache curl
    - |
      # install dagger
      cd /usr/local
      curl -L https://dl.dagger.io/dagger/install.sh | sh
      cd -

      dagger version

docker-build:
  extends: [.dagger]
  stage: build
  script:
    - dagger project update
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
        dagger do \
          --cache-from type=local,src=${DAGGER_CACHE_PATH} \
          --cache-to type=local,mode=max,dest=${DAGGER_CACHE_PATH} \
          pushFromMain
      else
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
        dagger do \
          --cache-from type=local,src=${DAGGER_CACHE_PATH} \
          --cache-to type=local,mode=max,dest=${DAGGER_CACHE_PATH} \
          pushFromCommit
      fi
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

docker-release:
  extends: [.dagger]
  stage: release
  script:
    - dagger project update
    - |
      dagger do \
        --cache-from type=local,src=${DAGGER_CACHE_PATH} \
        --cache-to type=local,mode=max,dest=${DAGGER_CACHE_PATH} \
        release
  rules:
    - if: $CI_COMMIT_TAG
      exists:
        - Dockerfile
